PowerShell

Set-ExecutionPolicy remotesigned

get -command		//stampa tutti i comandi 
get-netipaddress		//restituisce informazioni ip

--navigazione nel terminale
get-childitem			//dir
Get-ChildItem | where {$_ -like "p*.ps1"}		//tutti i file inizianti con p est. ps1
echo ""
Get-ChildItem | where {$_ -like "*1.ps1"}		//tutti i file che finiscono con 1 est. ps1
echo ""
Get-ChildItem | where {$_ -like "prova?.ps1"}	//tutti i file con prova e un carattere generico dopo est. ps1

set-location desktop
set-location “C:\......”
set-location c:		//sul c

--creare file e cartelle
new-item -itemtype "Directory" -path "scuola"		//crea cartella scuola

new-item -itemtype "File" -name "Compito.txt"		//crea file txt
new-item -itemtype "File" -name "Compito.txt" -value "Sto scrivendo dentro"	//crea e scrive dentro
set-content "newCompito" -value "Sto modificando il testo"		//modifica testo 
rename-item "Compito.txt" "newCompito.txt"			//rinomina file
get-content "newCompito.txt"					//stampa contenuto file
remove-item "Relaz.txt"					//elimina file

--processi
get-process
get-process notepad		//informazioni su processo notepad

stop-process -id 9604		//arresta processo in esecuzione (necessario id)

get-process | Sort-Object CPU		//odina in crescenza i processi per tempo di utilizzo della cpu
get-process | Sort-Object CPU -Descending		//odina in decrescenza i processi per tempo di utilizzo della cpu
get-process | Sort-Object CPU -Descending	| Select-Object -First 5	//mostra i primi 5 processi ordinati in ordine decrescente
get-process | Sort-Object (colonna…)
Get-Process | Get-Member -type Method	//metodi di get-process
Get-Process | Get-Member -type Propriety	//proprietà metodo get-process
	descending
	ascending
	firs
	last
	
--indirizzamento output
Get-Process | Sort-Object CPU | Select-Object -last 5 > processi.txt	//crea file processi.txt con dentro i 5 processi della cpu		NB: prima selezionare la directory con set-location
	>	:sovrascrive
	>>	:aggiunge
	2>	:sovrascrive errori
	2>>	:aggiunge errori

--indirizzamento input
echo “Ciao mondo”					//stampa ciao mondo
echo Ciao mondo | Sort-Object -Descending			//stampa in ordine de-alfabetico per parola
Get-Content nomi.txt				//stampa contenuto di un file
Get-Content nomi.txt | Sort-Object -Descending	//stampa in ordine de-alfabetico il contenuto di un file per parola
	
--variabili
$v = "Ciao mondo"		//stringa
$n = 1			//intero
$n = $v + 1			//stringa: Ciao mondo1

--array
$a =@("Ciao", "Mondo", "4BIF")
$a.Count        				//conta numero elementi

$path = "C:\Users\torrisi_g\Desktop"
Set-Location $path

--condizioni
---if
	if($a -eq "mondo") {"parola trovata"} else {"parola non trovata"}		//n variabile array $a cerca
	
---where
	$a = Get-ChildItem | where {$_ -like "*.ps1"}		//assegna alla vaiabile a il numero di file aventi l'estensione .ps1
	
	-eq	:uguale case-insensitive: non considera maiuscole e minuscole		i w
	-ceq	:uguale case-sensitive			i
	-lt	:minore					i w
	-gt	:maggiore				i w
	-le	:minore uguale				i w
	-ge	:maggiore uguale			i w
	-ne	:diverso				i w
	-not				i
	-and				i
	-or				i
	-like	:uguale			w

--cicli
---while
$d = 5
while ($d -gt 0)
{
    Write-Host $d;
    $d–;
}

---do while
$d = 5
do{
    Write-Host $d;
    $d++;
}while ($d -le 15)

---for
for($i = 0; $i -le 5; $i++){
    Write-Host $i;
}

--data
Get-Date
Get-Date -Format dd-MM-yy-/		//con caratteri e parametri a piacimento
	dddd	:giorno della settimana
	MM	:mese
	dd	:giorno del mese
	yy	:anno a 2 decimali
	yyyy	:anno
	HH:mm	:ora
	K	:fuso orario

--scrivere
write-host "Ciao fra"
Write-Host "Ciao Fra" -BackgroundColor Cyan -ForegroundColor red 
